# Schema generation:
# $ helm plugin install https://github.com/losisin/helm-values-schema-json.git
# $ helm schema --draft 2020 --indent 2 --noAdditionalProperties=false --schemaRoot.description='Helm Chart to deploy KCM manager controller and its related components' --input ./templates/provider/kcm/values.yaml --output ./templates/provider/kcm/values.schema.json

nameOverride: ""
fullnameOverride: ""

admissionWebhook:
  # enabled: false # WARN: setting the default value to false actually disables the WH; setting to true does not allow to install the KCM chart due to missing cert-manager CRDs
  port: 9443
  certDir: "/tmp/k8s-webhook-server/serving-certs/"

controller:
  templatesRepoURL: "oci://ghcr.io/k0rdent/kcm/charts"
  globalRegistry: ""
  globalK0sURL: ""
  k0sURLCertSecret: "" # @schema type: string; description: Name of a Secret containing K0s Download URL Root CA with ca.crt key
  registryCredsSecret: "" # @schema type: string; description: Name of a Secret containing Registry Credentials (Auth) Data
  registryCertSecret: "" # @schema type: string; description: Name of a Secret containing Registry Root CA with ca.crt key
  insecureRegistry: false
  createManagement: true
  createAccessManagement: true
  createRelease: true
  createTemplates: true
  enableTelemetry: true
  nodeSelector: {} # @schema type: object; description: Node selector to constrain the pod to run on specific nodes
  affinity: {} # @schema type: object; description: Affinity rules for pod scheduling
  tolerations: [] # @schema type: array; description: Tolerations to allow the pod to schedule on tainted nodes
  validateClusterUpgradePath: true # @schema type: boolean; description: Specifies whether the ClusterDeployment upgrade path should be validated
  enableSveltosExpiredCtrl: false # @schema type: boolean; description: Enables SveltosCluster controller, updating stuck (expired) sveltos management cluster kubeconfig tokens
  logger: # @schema title: Logger Settings; description: Global controllers logger settings; type: object
    devel: false # @schema type: boolean; description: Development defaults(encoder=console,logLevel=debug,stackTraceLevel=warn) Production defaults(encoder=json,logLevel=info,stackTraceLevel=error)
    encoder: "" # @schema enum:[json, console, ""] ; type: string
    log-level: "" # @schema enum:[info, debug, error, ""] ; type: string
    stacktrace-level: "" # @schema enum:[info, error, panic, ""] ; type: string
    time-encoding: rfc3339 # @schema enum:[epoch, millis, nano, iso8601, rfc3339, rfc3339nano, ""] ; type: string
  debug:
    pprofBindAddress: "" # @schema type: string; title: Set pprof binding address; description: The TCP address that the controller should bind to for serving pprof, '0' or empty value disables pprof; pattern: (?:^0?$)|(?:^(?:[\w.-]+(?:\.?[\w\.-]+)+)?:(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$)

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

image:
  repository: ghcr.io/k0rdent/kcm/controller
  tag: latest
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

replicas: 1

serviceAccount:
  annotations: {}

kubernetesClusterDomain: cluster.local
metricsService:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP

# Subcharts
cert-manager:
  enabled: true
  crds:
    enabled: true
    keep: false

flux2:
  enabled: true
  policies:
    create: false
  imageAutomationController:
    create: false
  imageReflectionController:
    create: false
  kustomizeController:
    create: false
  notificationController:
    create: false
  helmController:
    container:
      additionalArgs:
        - --watch-label-selector=k0rdent.mirantis.com/managed=true
  sourceController:
    container:
      additionalArgs:
        - --watch-label-selector=k0rdent.mirantis.com/managed=true

cluster-api-operator:
  enabled: false
  resources:
    manager:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 150Mi

velero:
  enabled: true
  # example of enabling a plugin
  # initContainers:
  # - name: velero-plugin-for-aws
  #   image: velero/velero-plugin-for-aws:v1.11.0
  #   imagePullPolicy: IfNotPresent
  #   volumeMounts:
  #     - mountPath: /target
  #       name: plugins
  metrics:
    enabled: false
  upgradeCRDs: false
  cleanUpCRDs: false
  credentials:
    useSecret: false
  snapshotsEnabled: false
  backupsEnabled: false
  deployNodeAgent: false
