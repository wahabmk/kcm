{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Helm Chart to deploy KCM manager controller and its related components",
  "properties": {
    "admissionWebhook": {
      "properties": {
        "certDir": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "cert-manager": {
      "properties": {
        "crds": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "keep": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "cluster-api-operator": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "resources": {
          "properties": {
            "manager": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {
                      "type": "string"
                    },
                    "memory": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "requests": {
                  "properties": {
                    "cpu": {
                      "type": "string"
                    },
                    "memory": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "containerSecurityContext": {
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "properties": {
            "drop": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "controller": {
      "properties": {
        "affinity": {
          "description": "Affinity rules for pod scheduling",
          "properties": {},
          "type": [
            "object"
          ]
        },
        "createAccessManagement": {
          "type": "boolean"
        },
        "createManagement": {
          "type": "boolean"
        },
        "createRelease": {
          "type": "boolean"
        },
        "createTemplates": {
          "type": "boolean"
        },
        "debug": {
          "properties": {
            "pprofBindAddress": {
              "description": "The TCP address that the controller should bind to for serving pprof, '0' or empty value disables pprof",
              "pattern": "(?:^0?$)|(?:^(?:[\\w.-]+(?:\\.?[\\w\\.-]+)+)?:(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$)",
              "title": "Set pprof binding address",
              "type": [
                "string"
              ]
            }
          },
          "type": "object"
        },
        "enableSveltosExpiredCtrl": {
          "description": "Enables SveltosCluster controller, updating stuck (expired) sveltos management cluster kubeconfig tokens",
          "type": [
            "boolean"
          ]
        },
        "enableTelemetry": {
          "type": "boolean"
        },
        "globalK0sURL": {
          "type": "string"
        },
        "globalRegistry": {
          "type": "string"
        },
        "insecureRegistry": {
          "type": "boolean"
        },
        "k0sURLCertSecret": {
          "description": "Name of a Secret containing K0s Download URL Root CA with ca.crt key",
          "type": [
            "string"
          ]
        },
        "logger": {
          "description": "Global controllers logger settings",
          "properties": {
            "devel": {
              "description": "Development defaults(encoder=console,logLevel=debug,stackTraceLevel=warn) Production defaults(encoder=json,logLevel=info,stackTraceLevel=error)",
              "type": [
                "boolean"
              ]
            },
            "encoder": {
              "enum": [
                "json",
                "console",
                ""
              ],
              "type": [
                "string"
              ]
            },
            "log-level": {
              "enum": [
                "info",
                "debug",
                "error",
                ""
              ],
              "type": [
                "string"
              ]
            },
            "stacktrace-level": {
              "enum": [
                "info",
                "error",
                "panic",
                ""
              ],
              "type": [
                "string"
              ]
            },
            "time-encoding": {
              "enum": [
                "epoch",
                "millis",
                "nano",
                "iso8601",
                "rfc3339",
                "rfc3339nano",
                ""
              ],
              "type": [
                "string"
              ]
            }
          },
          "title": "Logger Settings",
          "type": [
            "object"
          ]
        },
        "nodeSelector": {
          "description": "Node selector to constrain the pod to run on specific nodes",
          "properties": {},
          "type": [
            "object"
          ]
        },
        "registryCertSecret": {
          "description": "Name of a Secret containing Registry Root CA with ca.crt key",
          "type": [
            "string"
          ]
        },
        "registryCredsSecret": {
          "description": "Name of a Secret containing Registry Credentials (Auth) Data",
          "type": [
            "string"
          ]
        },
        "templatesRepoURL": {
          "type": "string"
        },
        "tolerations": {
          "description": "Tolerations to allow the pod to schedule on tainted nodes",
          "type": [
            "array"
          ]
        },
        "validateClusterUpgradePath": {
          "description": "Specifies whether the ClusterDeployment upgrade path should be validated",
          "type": [
            "boolean"
          ]
        }
      },
      "type": "object"
    },
    "flux2": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "helmController": {
          "properties": {
            "container": {
              "properties": {
                "additionalArgs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "imageAutomationController": {
          "properties": {
            "create": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "imageReflectionController": {
          "properties": {
            "create": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "kustomizeController": {
          "properties": {
            "create": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "notificationController": {
          "properties": {
            "create": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "policies": {
          "properties": {
            "create": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "sourceController": {
          "properties": {
            "container": {
              "properties": {
                "additionalArgs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "type": "string"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterDomain": {
      "type": "string"
    },
    "metricsService": {
      "properties": {
        "ports": {
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "protocol": {
                "type": "string"
              },
              "targetPort": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "nameOverride": {
      "type": "string"
    },
    "replicas": {
      "type": "integer"
    },
    "resources": {
      "properties": {
        "limits": {
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "requests": {
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "properties": {},
          "type": "object"
        }
      },
      "type": "object"
    },
    "velero": {
      "properties": {
        "backupsEnabled": {
          "type": "boolean"
        },
        "cleanUpCRDs": {
          "type": "boolean"
        },
        "credentials": {
          "properties": {
            "useSecret": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "deployNodeAgent": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "metrics": {
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "snapshotsEnabled": {
          "type": "boolean"
        },
        "upgradeCRDs": {
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
