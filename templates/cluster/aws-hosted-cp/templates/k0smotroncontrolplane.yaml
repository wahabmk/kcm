{{- $global := .Values.global | default dict }}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0smotronControlPlane
metadata:
  name: {{ include "k0smotroncontrolplane.name" . }}
spec:
  replicas: 3
  # dirty hack
  version: {{ .Values.k0s.version | replace "+" "-" }}
  {{- with .Values.k0smotron.service }}
  service:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if $global.registry }}
  image: {{ $global.registry }}/k0s
  etcd:
    image: "{{ $global.registry }}/etcd:v3.5.13"
  {{- if $global.registryCertSecret }}
  mounts:
    - path: /usr/local/share/ca-certificates/registry
      secret:
        defaultMode: 420
        items:
          - key: ca.crt
            path: ca.crt
        secretName: {{ $global.registryCertSecret }}
  {{- end }}
  {{- end }}
  controllerPlaneFlags:
  - "--enable-cloud-provider=true"
  - "--debug=true"
  k0sConfig:
    apiVersion: k0s.k0sproject.io/v1beta1
    kind: ClusterConfig
    metadata:
      name: k0s
    spec:
      {{- with .Values.k0s.api.extraArgs }}
      api:
        extraArgs:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      network:
        provider: calico
        calico:
          mode: ipip
      {{- if $global.registry }}
      images:
        metricsserver:
          image: "{{ $global.registry }}/k0sproject/metrics-server"
        kubeproxy:
          image: "{{ $global.registry }}/k0sproject/kube-proxy"
        coredns:
          image: "{{ $global.registry }}/k0sproject/coredns"
        pause:
          image: "{{ $global.registry }}/k0sproject/pause"
        calico:
          cni:
            image: "{{ $global.registry }}/k0sproject/calico-cni"
          node:
            image: "{{ $global.registry }}/k0sproject/calico-node"
          kubecontrollers:
            image: "{{ $global.registry }}/k0sproject/calico-kube-controllers"
      {{- end }}
      extensions:
        helm:
          repositories:
          {{- if not $global.registry }}
            - name: mirantis
              url: https://charts.mirantis.com
            - name: aws-ebs-csi-driver
              url: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
          {{- else }}
            - name: global-registry
              url: oci://{{ $global.registry }}
              {{- if $global.registryCertSecret }}
              caFile: /usr/local/share/ca-certificates/registry/ca.crt
              {{- end }}
          {{- end }}
          charts:
          - name: aws-cloud-controller-manager
            namespace: kube-system
            {{- if $global.registry }}
            chartname: oci://{{ $global.registry }}/charts/aws-cloud-controller-manager
            {{- else }}
            chartname: mirantis/aws-cloud-controller-manager
            {{- end }}
            version: "0.0.9"
            values: |
              image:
                {{- if $global.registry }}
                repository: {{ $global.registry }}/provider-aws/cloud-controller-manager
                {{- end }}
                tag: v1.30.3
              args:
                - --v=2
                - --cloud-provider=aws
                - --cluster-cidr={{ first .Values.clusterNetwork.pods.cidrBlocks }}
                - --allocate-node-cidrs=true
                - --cluster-name={{ include "cluster.name" . }}
              cloudConfig:
                enabled: true
                global:
                  KubernetesClusterID: {{ required ".Values.managementClusterName is required on AWS hosted deployment" .Values.managementClusterName }}
              # Removing the default `node-role.kubernetes.io/control-plane` node selector
              # TODO: it does not work
              nodeSelector:
                node-role.kubernetes.io/control-plane: null
          - name: aws-ebs-csi-driver
            namespace: kube-system
            {{- if $global.registry }}
            chartname: oci://{{ $global.registry }}/charts/aws-ebs-csi-driver
            {{- else }}
            chartname: aws-ebs-csi-driver/aws-ebs-csi-driver
            {{- end }}
            version: 2.33.0
            values: |
              {{- if $global.registry }}
              image:
                repository: {{ $global.registry }}/ebs-csi-driver/aws-ebs-csi-driver
              sidecars:
                provisioner:
                  image:
                    repository: {{ $global.registry }}/kubernetes-csi/external-provisioner
                attacher:
                  image:
                    repository: {{ $global.registry }}/kubernetes-csi/external-attacher
                snapshotter:
                  image:
                    repository: {{ $global.registry }}kubernetes-csi/external-snapshotter/csi-snapshotter
                livenessProbe:
                  image:
                    repository: {{ $global.registry }}/kubernetes-csi/livenessprobe
                resizer:
                  image:
                    repository: {{ $global.registry }}/kubernetes-csi/external-resizer
                nodeDriverRegistrar:
                  image:
                    repository: {{ $global.registry }}/kubernetes-csi/node-driver-registrar
                volumemodifier:
                  image:
                    repository: {{ $global.registry }}/ebs-csi-driver/volume-modifier-for-k8s
              {{- end }}
              defaultStorageClass:
                enabled: true
              node:
                kubeletPath: /var/lib/k0s/kubelet
