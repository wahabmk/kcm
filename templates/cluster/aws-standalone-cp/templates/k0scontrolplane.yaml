{{- $global := .Values.global | default dict }}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0sControlPlane
metadata:
  name: {{ include "k0scontrolplane.name" . }}
spec:
  replicas: {{ .Values.controlPlaneNumber }}
  version: {{ .Values.k0s.version }}
  k0sConfigSpec:
    {{- if $global.k0sURL }}
    downloadURL: "{{ $global.k0sURL }}/k0s-{{ .Values.k0s.version }}-amd64"
    {{- end }}
    args:
      - --enable-worker
      - --enable-cloud-provider
      - --kubelet-extra-args="--cloud-provider=external"
      - --disable-components=konnectivity-server
    {{- $auth := .Values.k0s.auth }}
    {{- $files := .Values.k0s.files }}
    {{- if or (and $auth $auth.enabled) $files $global.registryCertSecret $global.k0sURLCertSecret }}
    files:
    {{- if and $auth $auth.enabled }}
    - content: | {{ toYaml $auth.config | nindent 8 }}
      permissions: "0644"
      path: /etc/k0s/auth/auth-config.yaml
    {{- end }}
    {{- range $file := $files }}
    - {{ toYaml $file | trim | nindent 6 }}
    {{- end }}
    {{- end }}
    {{- $certs := dict "registry.crt" $global.registryCertSecret "k0s-url.crt" $global.k0sURLCertSecret }}
    {{- range $path, $secret := $certs }}
    {{- if $secret }}
    - contentFrom:
        secretRef:
          name: {{ $secret }}
          key: ca.crt
      permissions: "0664"
      path: /usr/local/share/ca-certificates/{{ $path }}
    {{- end }}
    {{- end }}
    {{- if or $global.registryCertSecret $global.k0sURLCertSecret }}
    preStartCommands:
    - "sudo update-ca-certificates"
    {{- end }}
    k0s:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: ClusterConfig
      metadata:
        name: k0s
      spec:
        api:
          extraArgs:
            anonymous-auth: "true"
            {{- if and (.Values.k0s.auth) (.Values.k0s.auth.enabled) }}
            authentication-config: "/etc/k0s/auth/auth-config.yaml"
            {{- end }}
          {{- with .Values.k0s.api.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        network:
          provider: calico
          calico:
            mode: ipip
        {{- if $global.registry }}
        images:
          metricsserver:
            image: "{{ $global.registry }}/k0sproject/metrics-server"
          kubeproxy:
            image: "{{ $global.registry }}/k0sproject/kube-proxy"
          coredns:
            image: "{{ $global.registry }}/k0sproject/coredns"
          pause:
            image: "{{ $global.registry }}/k0sproject/pause"
          calico:
            cni:
              image: "{{ $global.registry }}/k0sproject/calico-cni"
            node:
              image: "{{ $global.registry }}/k0sproject/calico-node"
            kubecontrollers:
              image: "{{ $global.registry }}/k0sproject/calico-kube-controllers"
        {{- end }}
        extensions:
          helm:
            {{- if not $global.registry }}
            repositories:
              - name: mirantis
                url: https://charts.mirantis.com
              - name: aws-ebs-csi-driver
                url: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
            {{- end }}
            charts:
              - name: aws-cloud-controller-manager
                namespace: kube-system
                {{- if $global.registry }}
                chartname: oci://{{ $global.registry }}/charts/aws-cloud-controller-manager
                {{- else }}
                chartname: mirantis/aws-cloud-controller-manager
                {{- end }}
                version: "0.0.9"
                values: |
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: "true"
                  image:
                    {{- if $global.registry }}
                    repository: {{ $global.registry }}/provider-aws/cloud-controller-manager
                    {{- end }}
                    tag: v1.30.3
                  args:
                    - --v=2
                    - --cloud-provider=aws
                    - --cluster-cidr={{ first .Values.clusterNetwork.pods.cidrBlocks }}
                    - --allocate-node-cidrs=true
                    - --cluster-name={{ include "cluster.name" . }}
              - name: aws-ebs-csi-driver
                namespace: kube-system
                {{- if $global.registry }}
                chartname: oci://{{ $global.registry }}/charts/aws-ebs-csi-driver
                {{- else }}
                chartname: aws-ebs-csi-driver/aws-ebs-csi-driver
                {{- end }}
                version: 2.33.0
                values: |
                  {{- if $global.registry }}
                  image:
                    repository: {{ $global.registry }}/ebs-csi-driver/aws-ebs-csi-driver
                  sidecars:
                    provisioner:
                      image:
                        repository: {{ $global.registry }}/kubernetes-csi/external-provisioner
                    attacher:
                      image:
                        repository: {{ $global.registry }}/kubernetes-csi/external-attacher
                    snapshotter:
                      image:
                        repository: {{ $global.registry }}kubernetes-csi/external-snapshotter/csi-snapshotter
                    livenessProbe:
                      image:
                        repository: {{ $global.registry }}/kubernetes-csi/livenessprobe
                    resizer:
                      image:
                        repository: {{ $global.registry }}/kubernetes-csi/external-resizer
                    nodeDriverRegistrar:
                      image:
                        repository: {{ $global.registry }}/kubernetes-csi/node-driver-registrar
                    volumemodifier:
                      image:
                        repository: {{ $global.registry }}/ebs-csi-driver/volume-modifier-for-k8s
                  {{- end }}
                  defaultStorageClass:
                    enabled: true
                  node:
                    kubeletPath: /var/lib/k0s/kubelet
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSMachineTemplate
      name: {{ include "awsmachinetemplate.controlplane.name" . }}
      namespace: {{ .Release.Namespace }}
