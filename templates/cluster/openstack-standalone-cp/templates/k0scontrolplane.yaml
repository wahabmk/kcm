{{- $global := .Values.global | default dict }}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0sControlPlane
metadata:
  name: {{ include "k0scontrolplane.name" . }}
spec:
  replicas: {{ .Values.controlPlaneNumber }}
  version: {{ .Values.k0s.version }}
  k0sConfigSpec:
    {{- if $global.k0sURL }}
    downloadURL: "{{ $global.k0sURL }}/k0s-{{ .Values.k0s.version }}-amd64"
    {{- end }}
    {{- if or $global.registryCertSecret $global.k0sURLCertSecret }}
    {{- $certs := dict "registry.crt" $global.registryCertSecret "k0s-url.crt" $global.k0sURLCertSecret }}
    files:
      {{- range $path, $secret := $certs }}
      {{- if $secret }}
      - contentFrom:
          secretRef:
            name: {{ $secret }}
            key: ca.crt
        permissions: "0664"
        path: /usr/local/share/ca-certificates/{{ $path }}
      {{- end }}
      {{- end }}
    preStartCommands:
    - "sudo update-ca-certificates"
    {{- end }}
    args:
      - --enable-worker
      - --enable-cloud-provider
      - --kubelet-extra-args="--cloud-provider=external"
      - --disable-components=konnectivity-server
    k0s:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: ClusterConfig
      metadata:
        name: k0s
      spec:
        api:
          extraArgs:
            anonymous-auth: "true"
            {{- with .Values.k0s.api.extraArgs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        network:
          provider: calico
          calico:
            mode: vxlan
        {{- if $global.registry }}
        images:
          metricsserver:
            image: "{{ $global.registry }}/k0sproject/metrics-server"
          kubeproxy:
            image: "{{ $global.registry }}/k0sproject/kube-proxy"
          coredns:
            image: "{{ $global.registry }}/k0sproject/coredns"
          pause:
            image: "{{ $global.registry }}/k0sproject/pause"
          calico:
            cni:
              image: "{{ $global.registry }}/k0sproject/calico-cni"
            node:
              image: "{{ $global.registry }}/k0sproject/calico-node"
            kubecontrollers:
              image: "{{ $global.registry }}/k0sproject/calico-kube-controllers"
        {{- end }}
        extensions:
          helm:
            {{- if not $global.registry }}
            repositories:
              - name: openstack
                url: https://kubernetes.github.io/cloud-provider-openstack/
            {{- end }}
            charts:
              - name: openstack-ccm
                {{- if $global.registry }}
                chartname: oci://{{ $global.registry }}/charts/openstack-cloud-controller-manager
                {{- else }}
                chartname: openstack/openstack-cloud-controller-manager
                {{- end }}
                version: 2.31.1
                order: 1
                namespace: kube-system
                values: |
                  {{- if $global.registry }}
                  image:
                    repository: {{ $global.registry }}/provider-os/openstack-cloud-controller-manager
                  {{- end }}
                  secret:
                    enabled: true
                    name: openstack-cloud-config
                    create: false
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: "true"
                  tolerations:
                    - key: node.cloudprovider.kubernetes.io/uninitialized
                      value: "true"
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/control-plane
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/master
                      effect: NoSchedule
                  extraEnv:
                    - name: OS_CCM_REGIONAL
                      value: {{ .Values.ccmRegional | quote }}
                  extraVolumes:
                    - name: flexvolume-dir
                      hostPath:
                        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
                    - name: k8s-certs
                      hostPath:
                        path: /etc/kubernetes/pki
                    {{- if and .Values.identityRef.caCert .Values.identityRef.caCert.secretName }}
                    - name: cloud-ca-cert
                      secret:
                        secretName: {{ .Values.identityRef.caCert.secretName }}
                    {{- end }}
                  extraVolumeMounts:
                    - name: flexvolume-dir
                      mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
                      readOnly: true
                    - name: k8s-certs
                      mountPath: /etc/kubernetes/pki
                      readOnly: true
                    {{- if and .Values.identityRef.caCert .Values.identityRef.caCert.secretName }}
                    - name: cloud-ca-cert
                      mountPath: {{ .Values.identityRef.caCert.path }}
                    {{- end }}
              - name: openstack-csi
                {{- if $global.registry }}
                chartname: oci://{{ $global.registry }}/charts/openstack-cinder-csi
                {{- else }}
                chartname: openstack/openstack-cinder-csi
                {{- end }}
                version: 2.31.2
                order: 2
                namespace: kube-system
                values: |
                  storageClass:
                    enabled: true
                    delete:
                      isDefault: false
                      allowVolumeExpansion: true
                    retain:
                      isDefault: false
                      allowVolumeExpansion: false
                  secret:
                    enabled: true
                    name: openstack-cloud-config
                    create: false
                  csi:
                    {{- if $global.registry }}
                    attacher:
                      image:
                        repository: {{ $global.registry }}/sig-storage/csi-attacher
                    provisioner:
                      image:
                        repository: {{ $global.registry }}/sig-storage/csi-provisioner
                    snapshotter:
                      image:
                        repository: {{ $global.registry }}/sig-storage/csi-snapshotter
                    resizer:
                      image:
                        repository: {{ $global.registry }}/sig-storage/csi-resizer
                    livenessprobe:
                      image:
                        repository: {{ $global.registry }}/sig-storage/livenessprobe
                    nodeDriverRegistrar:
                      image:
                        repository: {{ $global.registry }}/sig-storage/csi-node-driver-registrar
                    {{- end }}
                    plugin:
                      {{- if $global.registry }}
                      image:
                        repository: {{ $global.registry }}/provider-os/cinder-csi-plugin
                      {{- end }}
                      nodePlugin:
                        kubeletDir: /var/lib/k0s/kubelet
                      {{- if and .Values.identityRef.caCert .Values.identityRef.caCert.secretName }}
                      volumes:
                      - name: cloud-ca-cert
                        secret:
                          secretName: {{ .Values.identityRef.caCert.secretName }}
                      volumeMounts:
                      - name: cloud-config
                        mountPath: /etc/kubernetes
                        readOnly: true
                      - name: cloud-ca-cert
                        mountPath: {{ .Values.identityRef.caCert.path }}
                     {{- end }}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OpenStackMachineTemplate
      name: {{ include "openstackmachinetemplate.controlplane.name" . }}
      namespace: {{ .Release.Namespace }}
