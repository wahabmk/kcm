{{- $global := .Values.global | default dict }}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0smotronControlPlane
metadata:
  name: {{ include "k0smotroncontrolplane.name" . }}
spec:
  replicas: {{ .Values.controlPlaneNumber }}
  version: {{ .Values.k0s.version | replace "+" "-" }}
  {{- with .Values.k0smotron.service }}
  service:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if $global.registry }}
  image: {{ $global.registry }}/k0s
  etcd:
    image: "{{ $global.registry }}/etcd:v3.5.13"
  {{- if $global.registryCertSecret }}
  mounts:
    - path: /usr/local/share/ca-certificates/registry
      secret:
        defaultMode: 420
        items:
          - key: ca.crt
            path: ca.crt
        secretName: {{ $global.registryCertSecret }}
  {{- end }}
  {{- end }}
  controllerPlaneFlags:
  - "--enable-cloud-provider=true"
  - "--debug=true"
  k0sConfig:
    apiVersion: k0s.k0sproject.io/v1beta1
    kind: ClusterConfig
    metadata:
      name: k0s
    spec:
      {{- with .Values.k0s.api.extraArgs }}
      api:
        extraArgs:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      network:
        provider: calico
        calico:
          mode: vxlan
      {{- if $global.registry }}
      images:
        metricsserver:
          image: "{{ $global.registry }}/k0sproject/metrics-server"
        kubeproxy:
          image: "{{ $global.registry }}/k0sproject/kube-proxy"
        coredns:
          image: "{{ $global.registry }}/k0sproject/coredns"
        pause:
          image: "{{ $global.registry }}/k0sproject/pause"
        calico:
          cni:
            image: "{{ $global.registry }}/k0sproject/calico-cni"
          node:
            image: "{{ $global.registry }}/k0sproject/calico-node"
          kubecontrollers:
            image: "{{ $global.registry }}/k0sproject/calico-kube-controllers"
      {{- end }}
      extensions:
        helm:
          repositories:
          {{- if not $global.registry }}
            - name: mirantis
              url: https://charts.mirantis.com
            - name: azuredisk-csi-driver
              url: https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/charts
          {{- else }}
            - name: global-registry
              url: oci://{{ $global.registry }}
              {{- if $global.registryCertSecret }}
              caFile: /usr/local/share/ca-certificates/registry/ca.crt
              {{- end }}
          {{- end }}
          charts:
            - name: cloud-provider-azure
              namespace: kube-system
              {{- if $global.registry }}
              chartname: oci://{{ $global.registry }}/charts/cloud-provider-azure
              {{- else }}
              chartname: mirantis/cloud-provider-azure
              {{- end }}
              version: 1.31.2
              order: 1
              values: |
                cloudControllerManager:
                  cloudConfigSecretName: azure-cloud-provider
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: null
                  {{- if $global.registry }}
                  imageRepository: {{ $global.registry }}
                  {{- end }}
                  imageTag: v1.32.4
                cloudNodeManager:
                  imageTag: v1.32.4
                {{- if $global.registry }}
                  imageRepository: {{ $global.registry }}
                {{- end }}
            - name: azuredisk-csi-driver
              namespace: kube-system
              {{- if $global.registry }}
              chartname: oci://{{ $global.registry }}/charts/azuredisk-csi-driver
              {{- else }}
              chartname: azuredisk-csi-driver/azuredisk-csi-driver
              {{- end }}
              version: 1.30.3
              order: 2
              values: |
                {{- if $global.registry }}
                image:
                  baseRepo: {{ $global.registry }}
                {{- end }}
                controller:
                  cloudConfigSecretName: azure-cloud-provider
                node:
                  cloudConfigSecretName: azure-cloud-provider
                linux:
                  kubelet: "/var/lib/k0s/kubelet"
