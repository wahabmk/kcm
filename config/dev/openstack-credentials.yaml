---
apiVersion: v1
kind: Secret
metadata:
  name: openstack-cloud-config
  namespace: ${NAMESPACE}
  labels:
    k0rdent.mirantis.com/component: "kcm"
stringData:
  clouds.yaml: |
    clouds:
      openstack:
        auth:
          auth_url: ${OS_AUTH_URL}
          application_credential_id: ${OS_APPLICATION_CREDENTIAL_ID}
          application_credential_secret: ${OS_APPLICATION_CREDENTIAL_SECRET}
        region_name: ${OS_REGION_NAME}
        interface: ${OS_INTERFACE}
        identity_api_version: ${OS_IDENTITY_API_VERSION}
        auth_type: ${OS_AUTH_TYPE}
---
apiVersion: k0rdent.mirantis.com/v1beta1
kind: Credential
metadata:
  name: openstack-cluster-identity-cred
  namespace: ${NAMESPACE}
spec:
  description: OpenStack credentials
  identityRef:
    apiVersion: v1
    kind: Secret
    name: openstack-cloud-config
    namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openstack-cloud-config-resource-template
  namespace: ${NAMESPACE}
  labels:
    k0rdent.mirantis.com/component: "kcm"
  annotations:
    projectsveltos.io/template: "true"
data:
  configmap.yaml: |
    {{- $$cluster := .InfrastructureProvider -}}
    {{- $$identity := (getResource "InfrastructureProviderIdentity") -}}

    {{- $$clouds := fromYaml (index $$identity "data" "clouds.yaml" | b64dec) -}}
    {{- if not $$clouds }}
      {{ fail "failed to decode clouds.yaml" }}
    {{ end -}}

    {{- $$openstack := index $$clouds "clouds" "openstack" -}}

    {{- if not (hasKey $$openstack "auth") }}
      {{ fail "auth key not found in openstack config" }}
    {{- end }}
    {{- $$auth := index $$openstack "auth" -}}

    {{- $$auth_url := index $$auth "auth_url" -}}
    {{- $$app_cred_id := index $$auth "application_credential_id" -}}
    {{- $$app_cred_name := index $$auth "application_credential_name" -}}
    {{- $$app_cred_secret := index $$auth "application_credential_secret" -}}

    {{- $$network_id := $$cluster.status.externalNetwork.id -}}
    {{- $$network_name := $$cluster.status.externalNetwork.name -}}

    {{- $$ca_cert := index $$identity "data" "cacert" -}}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: openstack-cloud-config
      namespace: kube-system
    type: Opaque
    stringData:
      cloud.conf: |
        [Global]
        auth-url="{{ $$auth_url }}"

        {{- if $$app_cred_id }}
        application-credential-id="{{ $$app_cred_id }}"
        {{- end }}

        {{- if $$app_cred_name }}
        application-credential-name="{{ $$app_cred_name }}"
        {{- end }}

        {{- if $$app_cred_secret }}
        application-credential-secret="{{ $$app_cred_secret }}"
        {{- end }}

        {{- if and (not $$app_cred_id) (not $$app_cred_secret) }}
        username="{{ index $$openstack "username" }}"
        password="{{ index $$openstack "password" }}"
        {{- end }}
        region="{{ index $$openstack "region_name" }}"

        {{- if $$ca_cert }}
        ca-file=/etc/cacert/ca.crt
        {{- end }}

        [LoadBalancer]
        {{- if $$network_id }}
        floating-network-id="{{ $$network_id }}"
        {{- end }}

        [Networking]
        {{- if $$network_name }}
        public-network-name="{{ $$network_name }}"
        {{- end }}
    {{- if $$ca_cert }}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: openstack-ca-cert
      namespace: kube-system
    type: Opaque
    data:
      ca.crt: "{{ $$ca_cert }}"
    {{- end }}
